{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dishasingh/hulu-clone/src/components/SearchBar/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport classNames from \"classnames\";\n\nconst styles = theme => ({\n  root: {\n    height: theme.spacing(6),\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  iconButtonHidden: {\n    transform: \"scale(0, 0)\",\n    \"& > $icon\": {\n      opacity: 0\n    }\n  },\n  searchIconButton: {\n    marginRight: theme.spacing(-6)\n  },\n  input: {\n    width: \"100%\"\n  },\n  searchContainer: {\n    margin: \"auto px\",\n    width: `calc(100% - ${theme.spacing(6 + 4)}px)` // 6 button + 4 margin\n\n  }\n});\n/**\n * Material design search bar\n * @see [Search patterns](https://material.io/archive/guidelines/patterns/search.html)\n */\n\n\nconst SearchBar = /*#__PURE__*/React.forwardRef(_c = _s(({\n  cancelOnEscape,\n  className,\n  classes,\n  closeIcon,\n  disabled,\n  onCancelSearch,\n  onRequestSearch,\n  searchIcon,\n  style,\n  ...inputProps\n}, ref) => {\n  _s();\n\n  const inputRef = React.useRef();\n  const [value, setValue] = React.useState(inputProps.value);\n  React.useEffect(() => {\n    setValue(inputProps.value);\n  }, [inputProps.value]);\n  const handleFocus = React.useCallback(e => {\n    if (inputProps.onFocus) {\n      inputProps.onFocus(e);\n    }\n  }, [inputProps.onFocus]);\n  const handleBlur = React.useCallback(e => {\n    setValue(v => v.trim());\n\n    if (inputProps.onBlur) {\n      inputProps.onBlur(e);\n    }\n  }, [inputProps.onBlur]);\n  const handleInput = React.useCallback(e => {\n    setValue(e.target.value);\n\n    if (inputProps.onChange) {\n      inputProps.onChange(e.target.value);\n    }\n  }, [inputProps.onChange]);\n  const handleCancel = React.useCallback(() => {\n    setValue(\"\");\n\n    if (onCancelSearch) {\n      onCancelSearch();\n    }\n  }, [onCancelSearch]);\n  const handleRequestSearch = React.useCallback(() => {\n    if (onRequestSearch) {\n      onRequestSearch(value);\n    }\n  }, [onRequestSearch, value]);\n  const handleKeyUp = React.useCallback(e => {\n    if (e.charCode === 13 || e.key === \"Enter\") {\n      handleRequestSearch();\n    } else if (cancelOnEscape && (e.charCode === 27 || e.key === \"Escape\")) {\n      handleCancel();\n    }\n\n    if (inputProps.onKeyUp) {\n      inputProps.onKeyUp(e);\n    }\n  }, [handleRequestSearch, cancelOnEscape, handleCancel, inputProps.onKeyUp]);\n  React.useImperativeHandle(ref, () => ({\n    focus: () => {\n      inputRef.current.focus();\n    },\n    blur: () => {\n      inputRef.current.blur();\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classNames(classes.root, className),\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.searchContainer,\n      children: /*#__PURE__*/_jsxDEV(Input, { ...inputProps,\n        inputRef: inputRef,\n        onBlur: handleBlur,\n        value: value,\n        onChange: handleInput,\n        onKeyUp: handleKeyUp,\n        onFocus: handleFocus,\n        fullWidth: true,\n        className: classes.input,\n        disableUnderline: true,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleRequestSearch,\n      className: classNames(classes.iconButton, classes.searchIconButton, {\n        [classes.iconButtonHidden]: value !== \"\"\n      }),\n      disabled: disabled,\n      children: /*#__PURE__*/React.cloneElement(searchIcon, {\n        classes: {\n          root: classes.icon\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleCancel,\n      className: classNames(classes.iconButton, {\n        [classes.iconButtonHidden]: value === \"\"\n      }),\n      disabled: disabled,\n      children: /*#__PURE__*/React.cloneElement(closeIcon, {\n        classes: {\n          root: classes.icon\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 7\n  }, this);\n}, \"nSCRixcybykt59KImrshcKdEve4=\", false, function () {\n  return [React.useImperativeHandle];\n}));\n_c2 = SearchBar;\nSearchBar.defaultProps = {\n  className: \"\",\n  closeIcon: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 14\n  }, this),\n  disabled: false,\n  placeholder: \"Search\",\n  searchIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 15\n  }, this),\n  style: null,\n  value: \"\"\n};\nSearchBar.propTypes = {\n  /** Whether to clear search on escape */\n  cancelOnEscape: PropTypes.bool,\n\n  /** Override or extend the styles applied to the component. */\n  classes: PropTypes.object.isRequired,\n\n  /** Custom top-level class */\n  className: PropTypes.string,\n\n  /** Override the close icon. */\n  closeIcon: PropTypes.node,\n\n  /** Disables text field. */\n  disabled: PropTypes.bool,\n\n  /** Fired when the search is cancelled. */\n  onCancelSearch: PropTypes.func,\n\n  /** Fired when the text value changes. */\n  onChange: PropTypes.func,\n\n  /** Fired when the search icon is clicked. */\n  onRequestSearch: PropTypes.func,\n\n  /** Sets placeholder text for the embedded text field. */\n  placeholder: PropTypes.string,\n\n  /** Override the search icon. */\n  searchIcon: PropTypes.node,\n\n  /** Override the inline-styles of the root element. */\n  style: PropTypes.object,\n\n  /** The value of the text field. */\n  value: PropTypes.string\n};\nexport default withStyles(styles)(SearchBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar$React.forwardRef\");\n$RefreshReg$(_c2, \"SearchBar\");","map":{"version":3,"sources":["/Users/dishasingh/hulu-clone/src/components/SearchBar/SearchBar.js"],"names":["React","PropTypes","IconButton","Input","Paper","ClearIcon","SearchIcon","withStyles","classNames","styles","theme","root","height","spacing","display","justifyContent","iconButtonHidden","transform","opacity","searchIconButton","marginRight","input","width","searchContainer","margin","SearchBar","forwardRef","cancelOnEscape","className","classes","closeIcon","disabled","onCancelSearch","onRequestSearch","searchIcon","style","inputProps","ref","inputRef","useRef","value","setValue","useState","useEffect","handleFocus","useCallback","e","onFocus","handleBlur","v","trim","onBlur","handleInput","target","onChange","handleCancel","handleRequestSearch","handleKeyUp","charCode","key","onKeyUp","useImperativeHandle","focus","current","blur","iconButton","cloneElement","icon","defaultProps","placeholder","propTypes","bool","object","isRequired","string","node","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport classNames from \"classnames\";\n\nconst styles = (theme) => ({\n  root: {\n    height: theme.spacing(6),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  iconButtonHidden: {\n    transform: \"scale(0, 0)\",\n    \"& > $icon\": {\n      opacity: 0,\n    },\n  },\n  searchIconButton: {\n    marginRight: theme.spacing(-6),\n  },\n  input: {\n    width: \"100%\",\n  },\n  searchContainer: {\n    margin: \"auto px\",\n    width: `calc(100% - ${theme.spacing(6 + 4)}px)`, // 6 button + 4 margin\n  },\n});\n\n/**\n * Material design search bar\n * @see [Search patterns](https://material.io/archive/guidelines/patterns/search.html)\n */\nconst SearchBar = React.forwardRef(\n  (\n    {\n      cancelOnEscape,\n      className,\n      classes,\n      closeIcon,\n      disabled,\n      onCancelSearch,\n      onRequestSearch,\n      searchIcon,\n      style,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const inputRef = React.useRef();\n    const [value, setValue] = React.useState(inputProps.value);\n\n    React.useEffect(() => {\n      setValue(inputProps.value);\n    }, [inputProps.value]);\n\n    const handleFocus = React.useCallback(\n      (e) => {\n        if (inputProps.onFocus) {\n          inputProps.onFocus(e);\n        }\n      },\n      [inputProps.onFocus]\n    );\n\n    const handleBlur = React.useCallback(\n      (e) => {\n        setValue((v) => v.trim());\n        if (inputProps.onBlur) {\n          inputProps.onBlur(e);\n        }\n      },\n      [inputProps.onBlur]\n    );\n\n    const handleInput = React.useCallback(\n      (e) => {\n        setValue(e.target.value);\n        if (inputProps.onChange) {\n          inputProps.onChange(e.target.value);\n        }\n      },\n      [inputProps.onChange]\n    );\n\n    const handleCancel = React.useCallback(() => {\n      setValue(\"\");\n      if (onCancelSearch) {\n        onCancelSearch();\n      }\n    }, [onCancelSearch]);\n\n    const handleRequestSearch = React.useCallback(() => {\n      if (onRequestSearch) {\n        onRequestSearch(value);\n      }\n    }, [onRequestSearch, value]);\n\n    const handleKeyUp = React.useCallback(\n      (e) => {\n        if (e.charCode === 13 || e.key === \"Enter\") {\n          handleRequestSearch();\n        } else if (\n          cancelOnEscape &&\n          (e.charCode === 27 || e.key === \"Escape\")\n        ) {\n          handleCancel();\n        }\n        if (inputProps.onKeyUp) {\n          inputProps.onKeyUp(e);\n        }\n      },\n      [handleRequestSearch, cancelOnEscape, handleCancel, inputProps.onKeyUp]\n    );\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => {\n        inputRef.current.focus();\n      },\n      blur: () => {\n        inputRef.current.blur();\n      },\n    }));\n\n    return (\n      <Paper className={classNames(classes.root, className)} style={style}>\n        <div className={classes.searchContainer}>\n          <Input\n            {...inputProps}\n            inputRef={inputRef}\n            onBlur={handleBlur}\n            value={value}\n            onChange={handleInput}\n            onKeyUp={handleKeyUp}\n            onFocus={handleFocus}\n            fullWidth\n            className={classes.input}\n            disableUnderline\n            disabled={disabled}\n          />\n        </div>\n        <IconButton\n          onClick={handleRequestSearch}\n          className={classNames(classes.iconButton, classes.searchIconButton, {\n            [classes.iconButtonHidden]: value !== \"\",\n          })}\n          disabled={disabled}\n        >\n          {React.cloneElement(searchIcon, {\n            classes: { root: classes.icon },\n          })}\n        </IconButton>\n        <IconButton\n          onClick={handleCancel}\n          className={classNames(classes.iconButton, {\n            [classes.iconButtonHidden]: value === \"\",\n          })}\n          disabled={disabled}\n        >\n          {React.cloneElement(closeIcon, {\n            classes: { root: classes.icon },\n          })}\n        </IconButton>\n      </Paper>\n    );\n  }\n);\n\nSearchBar.defaultProps = {\n  className: \"\",\n  closeIcon: <ClearIcon />,\n  disabled: false,\n  placeholder: \"Search\",\n  searchIcon: <SearchIcon />,\n  style: null,\n  value: \"\",\n};\n\nSearchBar.propTypes = {\n  /** Whether to clear search on escape */\n  cancelOnEscape: PropTypes.bool,\n  /** Override or extend the styles applied to the component. */\n  classes: PropTypes.object.isRequired,\n  /** Custom top-level class */\n  className: PropTypes.string,\n  /** Override the close icon. */\n  closeIcon: PropTypes.node,\n  /** Disables text field. */\n  disabled: PropTypes.bool,\n  /** Fired when the search is cancelled. */\n  onCancelSearch: PropTypes.func,\n  /** Fired when the text value changes. */\n  onChange: PropTypes.func,\n  /** Fired when the search icon is clicked. */\n  onRequestSearch: PropTypes.func,\n  /** Sets placeholder text for the embedded text field. */\n  placeholder: PropTypes.string,\n  /** Override the search icon. */\n  searchIcon: PropTypes.node,\n  /** Override the inline-styles of the root element. */\n  style: PropTypes.object,\n  /** The value of the text field. */\n  value: PropTypes.string,\n};\n\nexport default withStyles(styles)(SearchBar);\n"]},"metadata":{},"sourceType":"module"}